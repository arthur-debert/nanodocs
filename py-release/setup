#!/bin/bash
set -e

# Get the directory of the current script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PY_RELEASE_DIR="$SCRIPT_DIR"

# Source common functions
source "$PY_RELEASE_DIR/lib/common.sh"

usage() {
    echo "Usage: $0 [OPTIONS] TARGET_DIR"
    echo
    echo "Install py-release into a target project directory"
    echo
    echo "Options:"
    echo "  --test          Create a temporary test directory as target"
    echo "  --help          Show this help message"
    echo
    echo "Arguments:"
    echo "  TARGET_DIR      Root directory of the target project"
}

# Parse arguments
TEST_MODE=0
TARGET_DIR=""

while [[ $# -gt 0 ]]; do
    case $1 in
    --test)
        TEST_MODE=1
        shift
        ;;
    --help)
        usage
        exit 0
        ;;
    -*)
        echo "Unknown option: $1"
        usage
        exit 1
        ;;
    *)
        if [ -z "$TARGET_DIR" ]; then
            TARGET_DIR="$1"
        else
            echo "Error: Multiple target directories specified"
            usage
            exit 1
        fi
        shift
        ;;
    esac
done

# If in test mode, create a temporary directory
if [ "$TEST_MODE" -eq 1 ]; then
    TARGET_DIR=$(mktemp -d)
    log_info "Created test directory: $TARGET_DIR"
    # Keep the temporary directory for inspection
    log_info "Note: Test directory will not be automatically removed"
elif [ -z "$TARGET_DIR" ]; then
    echo "Error: No target directory specified"
    usage
    exit 1
fi

# Ensure target directory exists
if [ ! -d "$TARGET_DIR" ]; then
    log_error "Target directory does not exist: $TARGET_DIR"
    exit 1
fi

# Make target directory absolute
TARGET_DIR=$(cd "$TARGET_DIR" && pwd)

# Install dependencies
log_info "Installing Python dependencies..."
pip install -r "$PY_RELEASE_DIR/lib/setup/requirements.txt"

# Install Homebrew dependencies if on macOS
if [[ "$OSTYPE" == "darwin"* ]]; then
    log_info "Installing Homebrew dependencies..."
    if ! command -v brew >/dev/null 2>&1; then
        log_error "Homebrew is not installed"
        exit 1
    fi
    brew bundle --file="$PY_RELEASE_DIR/lib/setup/Brewfile"
fi

# Create GitHub workflows directory if it doesn't exist
WORKFLOW_DIR="$TARGET_DIR/.github/workflows"
mkdir -p "$WORKFLOW_DIR"

# Copy GitHub workflow
log_info "Installing GitHub workflow..."
cp "$PY_RELEASE_DIR/lib/setup/package-release.yml" "$WORKFLOW_DIR/"

# Create marker file to indicate setup is complete
touch "$TARGET_DIR/.py-release-setup"

log_info "py-release setup complete in $TARGET_DIR"
log_info "The following files were installed:"
log_info "  - .github/workflows/package-release.yml"
log_info "  - .py-release-setup"

if [ "$TEST_MODE" -eq 1 ]; then
    log_info "Test installation completed. You can inspect the files at: $TARGET_DIR"
fi
